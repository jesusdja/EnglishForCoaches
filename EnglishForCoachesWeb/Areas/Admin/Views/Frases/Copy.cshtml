@model EnglishForCoachesWeb.Areas.Admin.Models.FrasesCopyViewModel

@{
    ViewBag.Title = "Copiar";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<!-- Page Header -->
<div class="content bg-gray-lighter">
    <div class="row items-push">
        <div class="col-sm-12">
            <h1 class="page-heading">
                <a href="@Url.Action("Index", "Subtemas", new {id = @Model.SubTema.TemaId })">
                    @Model.SubTema.Tema.Descripcion
                </a>/
                <a href="@Url.Action("Index", "Bloques", new {id = @Model.SubTema.SubTemaId })">
                    @Model.SubTema.Descripcion
                </a> /
                <a href="@Url.Action("Index", "Frases", new {id = @Model.GramaticaId })">
                    @Model.GramaticaTitulo
                </a> /            
                Copiar frase
            </h1>
        </div>
    </div>
</div>
<!-- END Page Header -->
<!-- Page Content -->
<div class="content content-narrow">
    @using (Html.BeginForm("Copy", "Frases", FormMethod.Post, new { @class = "form-horizontal push-10-t" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.Frase.FraseId)
        @Html.HiddenFor(model => model.Frase.FicheroAudio_en)
        @Html.HiddenFor(model => model.Frase.FicheroAudio_es)
        @Html.HiddenFor(model => model.Frase.Palabra_en)
        @Html.HiddenFor(model => model.Frase.Palabra_es)

        <div class="block">
            <div class="block-content block-content-full">  
                <div class="form-group">
                    <div class="col-sm-12">
                        Tema
                        <select id="ddlTemas" class="form-control" onchange="inicializarSelectSubTemas()"></select>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-12">
                        Subtema
                        <select id="ddlSubTemas" class="form-control" onchange="inicializarSelectGramaticas()"></select> 
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-12">
                        Gramática
                        @Html.DropDownListFor(model => model.GramaticaCopiarId, Model.GramaticasSelectList, new { @class = "form-control", id="ddlGramaticas" })
                    </div>
                </div>
            </div>
        </div>
        <div class="block-content block-content-full">
            <div class="form-group">
                <div class="col-sm-12 text-right">
                    <input type="submit" name="command" class="btn btn-default" value="Copiar" />
                </div>
            </div>
        </div>
    }
</div>

<!-- END Page Content -->

@section Scripts {
 <!--  JS Code -->
<script>
    var arrayTemasSelect = [];
    var arraySubtemasSelect = [];
    var arrayGramaticasSelect = [];

    var ddlTemas = $('#ddlTemas');
    var ddlSubTemas = $('#ddlSubTemas');
    var ddlGramaticas = $('#ddlGramaticas');

    @foreach (var tema in Model.TemaList)
        {
            @:arrayTemasSelect.push({ Text: "@tema.Descripcion", Value: "@tema.TemaId" });
                                        }
    @foreach (var subtema in Model.SubTemaList)
    {
        @:arraySubtemasSelect.push({ Text: "@subtema.Descripcion", Value: "@subtema.SubTemaId", TemaId: "@subtema.TemaId" });
            }
        @foreach (var gramatica in Model.GramaticaList)
    {
        @:arrayGramaticasSelect.push({ Text: "@gramatica.Titulo", Value: "@gramatica.GramaticaId", SubTemaId: "@gramatica.SubTemaId" });
    }

    function inicializarSelectTemas() {
        console.log("temas");
        console.log(arrayTemasSelect.length);
        ddlTemas.html('');
        for (var i = 0; i < arrayTemasSelect.length; i++) {
            $('<option/>').val(arrayTemasSelect[i].Value).html(arrayTemasSelect[i].Text).appendTo(ddlTemas);

        }
    }

    function inicializarSelectSubTemas() {
        console.log("subtemas");
        console.log(arraySubtemasSelect.length);
        ddlSubTemas.html('');
        for (var i = 0; i < arraySubtemasSelect.length; i++) {
            if (arraySubtemasSelect[i].TemaId == ddlTemas.val()) {
                $('<option/>').val(arraySubtemasSelect[i].Value).html(arraySubtemasSelect[i].Text).appendTo(ddlSubTemas);
            }
        }
        inicializarSelectGramaticas();
    }

    function inicializarSelectGramaticas() {
        console.log("Gramaticas");
        console.log(arrayGramaticasSelect.length);
        ddlGramaticas.html('');
        for (var i = 0; i < arrayGramaticasSelect.length; i++) {
            if (arrayGramaticasSelect[i].SubTemaId == ddlSubTemas.val()) {
                $('<option/>').val(arrayGramaticasSelect[i].Value).html(arrayGramaticasSelect[i].Text).appendTo(ddlGramaticas);
            }
        }
    }
   

    $(function () {

        console.log("inicio");

        inicializarSelectTemas();
        inicializarSelectSubTemas();
        inicializarSelectGramaticas();

        $(document).ready(function () {

        });
    });


</script>

}