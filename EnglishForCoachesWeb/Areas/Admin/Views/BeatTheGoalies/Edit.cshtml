@model EnglishForCoachesWeb.Areas.Admin.Models.BeatTheGoalieEditViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}
<!-- Page Header -->
<div class="content bg-gray-lighter">
    <div class="row items-push">
        <div class="col-sm-12">
            <h1 class="page-heading">
                <a href="@Url.Action("Index", "Subtemas", new {id = @Model.juegoOnline.SubTema.TemaId })">
                    @Model.juegoOnline.SubTema.Tema.Descripcion
                </a>
                / <a href="@Url.Action("Index", "Bloques", new {id = @Model.juegoOnline.SubTema.SubTemaId })">
                    @Model.juegoOnline.SubTema.Descripcion
                </a>                 
                / <a href="@Url.Action("Create", "BeatTheGoalies", new {id = @Model.juegoOnline.JuegoOnlineId })">
                    @Model.juegoOnline.Descripcion
                </a> / Editar BeatTheGoalie
            </h1>
        </div>
    </div>
</div>
<!-- END Page Header -->
<!-- Page Content -->
<div class="content content-narrow">

    @using (Html.BeginForm("Edit", "BeatTheGoalies", FormMethod.Post, new { @class = "form-horizontal push-10-t" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        @Html.HiddenFor(model => model.BeatTheGoalie.Id)
        @Html.HiddenFor(model => model.BeatTheGoalie.TipoJuegoOnlineId)
        @Html.HiddenFor(model => model.BeatTheGoalie.SubTemaId)
        @Html.HiddenFor(model => model.BeatTheGoalie.JuegoOnlineId)
        @Html.HiddenFor(model => model.BeatTheGoalie.FicheroAudio)

        <div class="block">
            <div class="block-content block-content-full">


                <div class="form-group">
                    <div class="col-sm-2">
                        <div class="form-material">
                            <button onclick="document.getElementById('audio_sentence').play();"
                                    class="btn btn-rounded @(string.IsNullOrEmpty(Model.BeatTheGoalie.FicheroAudio) ? "btn-danger":"btn-default")"
                                    type="button" @(string.IsNullOrEmpty(Model.BeatTheGoalie.FicheroAudio) ? "disabled" : "")>
                                <i class="fa fa-volume-up"></i>
                            </button>
                            @if (!string.IsNullOrEmpty(Model.BeatTheGoalie.FicheroAudio))
                            {
                                <audio id="audio_sentence">
                                    <source src="~/media/upload/BeatTheGoalie/@Model.BeatTheGoalie.FicheroAudio" type="audio/mpeg" />
                                </audio>
                            }
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-material">
                            @Html.LabelFor(model => model.AudioFile, htmlAttributes: new { @class = "" })
                            @Html.TextBoxFor(model => model.AudioFile, new { type = "file", accept = ".mp3" })
                            @Html.ValidationMessageFor(model => model.AudioFile)
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-material">
                            @Html.LabelFor(model => model.BeatTheGoalie.Enunciado, htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.BeatTheGoalie.Enunciado, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BeatTheGoalie.Enunciado, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-6">
                        <div class="form-material">
                            @Html.LabelFor(model => model.BeatTheGoalie.Respuesta1, htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.BeatTheGoalie.Respuesta1, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BeatTheGoalie.Respuesta1, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-material">
                            @Html.LabelFor(model => model.BeatTheGoalie.Respuesta2, htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.BeatTheGoalie.Respuesta2, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BeatTheGoalie.Respuesta2, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-6">
                        <div class="form-material">
                            @Html.LabelFor(model => model.BeatTheGoalie.Respuesta3, htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.BeatTheGoalie.Respuesta3, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BeatTheGoalie.Respuesta3, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-material">
                            @Html.LabelFor(model => model.BeatTheGoalie.Respuesta4, htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.BeatTheGoalie.Respuesta4, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BeatTheGoalie.Respuesta4, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-3">
                        <div class="form-material">
                            @Html.LabelFor(model => model.BeatTheGoalie.RespuestaCorrecta, htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.BeatTheGoalie.RespuestaCorrecta, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BeatTheGoalie.RespuestaCorrecta, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-9">
                        <div class="form-material">
                            @Html.LabelFor(model => model.BeatTheGoalie.Explicacion, htmlAttributes: new { @class = "" }) 
                            @Html.TextAreaFor(model => model.BeatTheGoalie.Explicacion, new { @class = "form-control", @row="3" })
                            @Html.ValidationMessageFor(model => model.BeatTheGoalie.Explicacion, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="block-content block-content-full">
            <div class="form-group">
                <div class="col-sm-12 text-right">
                    <input type="submit" name="command" value="Guardar" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
</div>

<!-- END Page Content -->
