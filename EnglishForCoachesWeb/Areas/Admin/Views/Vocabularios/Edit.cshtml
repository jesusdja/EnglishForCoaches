@model EnglishForCoachesWeb.Areas.Admin.Models.VocabularioEditViewModel


@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}<!-- Page Header -->
<div class="content bg-gray-lighter">
    <div class="row items-push">
        <div class="col-sm-12">
            <h1 class="page-heading">
                Editar vocabulario
            </h1>
        </div>
    </div>
</div>
<!-- END Page Header -->
<!-- Page Content -->
<div class="content content-narrow">

    @using (Html.BeginForm("Edit", "Vocabularios", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal push-10-t" }))
    {

        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.Vocabulario.VocabularioId)
        @Html.HiddenFor(model => model.Vocabulario.FicheroAudio)
        @Html.HiddenFor(model => model.DefinicionesVocabulario, new { @id = "hDefinicionesVocabulario" })

        <div class="block">
            <div class="block-content block-content-full">


                <div class="form-group">

                    <div class="form-group">
                        <div class="col-sm-12">
                            <div class="form-material">
                                @Html.DropDownListFor(model => model.Vocabulario.CategoriaVocabularioId, Model.categoriaVocabulariosSelectList, new { @class = "form-control" })
                                @Html.LabelFor(model => model.Vocabulario.CategoriaVocabularioId, htmlAttributes: new { @class = "" })
                                @Html.ValidationMessageFor(model => model.Vocabulario.CategoriaVocabularioId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>



                    <div class="col-sm-2">
                        <div class="form-material">
                            <button onclick="document.getElementById('audio_vocabulario').play();"
                                    class="btn btn-rounded @(string.IsNullOrEmpty(Model.Vocabulario.FicheroAudio)? "btn-danger":"btn-default")"
                                    type="button" @(string.IsNullOrEmpty(Model.Vocabulario.FicheroAudio) ? "disabled" : "")>
                                <i class="fa fa-volume-up"></i>
                            </button>
                            @if (!string.IsNullOrEmpty(Model.Vocabulario.FicheroAudio))
                            {
                                <audio id="audio_vocabulario">
                                    <source src="~/media/upload/audio/@Model.Vocabulario.FicheroAudio" type="audio/mpeg" />
                                </audio>
                            }
                        </div>
                    </div>
                    <div class="col-sm-10">
                        <div class="form-material">
                            @Html.LabelFor(model => model.Vocabulario.Palabra_en, htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.Vocabulario.Palabra_en, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Vocabulario.Palabra_en, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>

                <div class="form-group">
                    <div class="col-sm-6">
                        <div class="form-material">
                            @Html.LabelFor(model => model.Vocabulario.Palabra_es, htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.Vocabulario.Palabra_es, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Vocabulario.Palabra_es, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-material">
                            @Html.LabelFor(model => model.Vocabulario.Definicion, htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.Vocabulario.Definicion, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Vocabulario.Definicion, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>



                <div class="form-group">
                    <div class="col-sm-5">
                        <label class="" for="textPalabra_es">Más significados</label>
                        <div class="form-material">
                            <input id="textPalabra_es" class="form-control" type="text" />
                            @Html.ValidationMessageFor(model => model.DefinicionesVocabulario, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-sm-5">
                        <label class="" for="textDefinicion">Más definiciones</label>
                        <div class="form-material">
                            <input id="textDefinicion" class="form-control" type="text" />
                        </div>
                    </div>
                    <div class="col-sm-2">
                        <div class="input-group-btn">
                            <button class="btn btn-default" onclick="anadirRespuesta();" type="button"><i class="fa fa-plus-circle"></i></button>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-12">
                        <div class="form-material">
                            <ul id="ulDefinicionesVocabulario"></ul>
                        </div>
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-sm-12">
                        <div class="form-material">
                            @Html.LabelFor(model => model.Vocabulario.Explicacion, htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.Vocabulario.Explicacion, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Vocabulario.Explicacion, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-12">
                        <div class="form-material">
                            @Html.LabelFor(model => model.AudioFile, htmlAttributes: new { @class = "" })
                            @Html.TextBoxFor(model => model.AudioFile, new { type = "file", accept = ".mp3" })
                            @Html.ValidationMessageFor(model => model.AudioFile)
                        </div>
                    </div>
                </div>


            </div>
        </div>
        <div class="block-content block-content-full">
            <div class="form-group">
                <div class="col-sm-12 text-right">
                    <input type="submit" value="Guardar vocabulario" name="command" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
</div>
<!-- END Page Content -->

@section Scripts {

    <!-- Page JS Code -->
    <script>


        var hDefinicionesVocabulario = $("#hDefinicionesVocabulario");
        var textPalabra_es = $("#textPalabra_es");
        var textDefinicion = $("#textDefinicion");
        var ulDefinicionesVocabulario = $("#ulDefinicionesVocabulario");
        var arrDefinicionesVocabulario = [];

        function anadirRespuesta() {
            var val = textPalabra_es.val() + "_" + textDefinicion.val();
            if (val != '_') {
                arrDefinicionesVocabulario.push(val);
                ulDefinicionesVocabulario.append('<li id="' + val + '"> ' + val.replace("_", " - ") +
                    '<button class="btn btn-default" onclick="quitarRespuesta(\'' + val + '\');" type="button"><i class="fa fa-minus-circle"></i></button> </li>');
                hDefinicionesVocabulario.val(arrDefinicionesVocabulario.join('#'));
                textPalabra_es.val('');
                textDefinicion.val('');
            }
        }

        function quitarRespuesta(val) {
            var index = arrDefinicionesVocabulario.indexOf(val);
            if (index > -1) {
                arrDefinicionesVocabulario.splice(index, 1);
                $('#' + val).remove();

            }
            hDefinicionesVocabulario.val(arrDefinicionesVocabulario.join('#'));
        }


        $(document).ready(function () {

            var respuestas = hDefinicionesVocabulario.val();
            if (respuestas != "") {
                arrDefinicionesVocabulario = respuestas.split('#');
                for (var i = 0; i < arrDefinicionesVocabulario.length; i++) {
                    ulDefinicionesVocabulario.append('<li id="' + arrDefinicionesVocabulario[i] + '">' + arrDefinicionesVocabulario[i].replace("_", " - ") +
                        '<button class="btn btn-default" onclick="quitarRespuesta(\'' + arrDefinicionesVocabulario[i] + '\');" type="button"><i class="fa fa-minus-circle"></i></button> </li>');
                }
            }
        });

    </script>
}
