@model EnglishForCoachesWeb.Areas.Admin.Models.VocabularioCreateViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}
<!-- Page Header -->
<div class="content bg-gray-lighter">
    <div class="row items-push">
        <div class="col-sm-12">
            <h1 class="page-heading">
                Nuevo vocabulario
            </h1>
        </div>
    </div>
</div>
<!-- END Page Header -->
<!-- Page Content -->
<div class="content content-narrow">

    @using (Html.BeginForm("Create", "Vocabularios", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal push-10-t" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        

        <div class="block">
            <div class="block-content block-content-full">

                <div class="form-group">
                    <div class="col-sm-12">
                        <div class="form-material">
                            @Html.DropDownListFor(model => model.Vocabulario.CategoriaVocabularioId, Model.categoriaVocabulariosSelectList, new { @class = "form-control" })
                            @Html.LabelFor(model => model.Vocabulario.CategoriaVocabularioId, htmlAttributes: new { @class = "" })
                            @Html.ValidationMessageFor(model => model.Vocabulario.CategoriaVocabularioId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-12">
                        <div class="form-material">
                            @Html.LabelFor(model => model.Vocabulario.Palabra_en, htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.Vocabulario.Palabra_en, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Vocabulario.Palabra_en, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>

                <div class="form-group">
                    <div class="col-sm-6">
                        <div class="form-material">
                            @Html.LabelFor(model => model.Vocabulario.Palabra_es, htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.Vocabulario.Palabra_es, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Vocabulario.Palabra_es, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-material">
                            @Html.LabelFor(model => model.Vocabulario.Definicion, htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.Vocabulario.Definicion, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Vocabulario.Definicion, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>






                <div class="form-group">
                    <div class="col-sm-12">
                        <div class="form-material">
                            @Html.LabelFor(model => model.Vocabulario.Explicacion, htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.Vocabulario.Explicacion, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Vocabulario.Explicacion, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>



                <div class="form-group">
                    <div class="col-sm-12">
                        <div class="form-material">
                            @Html.TextBoxFor(model => model.AudioFile, new { type = "file", accept = ".mp3" })
                            @Html.ValidationMessageFor(model => model.AudioFile)
                            @Html.LabelFor(model => model.AudioFile, htmlAttributes: new { @class = "" })
                        </div>
                    </div>
                </div>

            </div>
            </div>
            <div class="block-content block-content-full">
                <div class="form-group">
                    <div class="col-sm-12 text-right">
                        @* El value afecta a la acción *@
                        <input type="submit" value="Guardar vocabulario" name="command" class="btn btn-default" />
                    </div>
                </div>
            </div>
    }
</div>
<!-- END Page Content -->
