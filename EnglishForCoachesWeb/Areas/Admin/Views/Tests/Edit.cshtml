@model EnglishForCoachesWeb.Areas.Admin.Models.TestEditViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}
<!-- Page Header -->
<div class="content bg-gray-lighter">
    <div class="row items-push">
        <div class="col-sm-12">
            <h1 class="page-heading">
                <a href="@Url.Action("Index", "Subtemas", new {id = @Model.bloque.SubTema.TemaId })">
                    @Model.bloque.SubTema.Tema.Descripcion
                </a>
                / <a href="@Url.Action("Index", "Bloques", new {id = @Model.bloque.SubTema.SubTemaId })">
                    @Model.bloque.SubTema.Descripcion
                </a>                 
                / <a href="@Url.Action("Create", "Tests", new {id = @Model.bloque.BloqueId })">
                    @Model.bloque.Descripcion
                </a> / Editar Test
            </h1>
        </div>
    </div>
</div>
<!-- END Page Header -->
<!-- Page Content -->
<div class="content content-narrow">

    @using (Html.BeginForm("Edit", "Tests", FormMethod.Post, new { @class = "form-horizontal push-10-t" })) {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        @Html.HiddenFor(model => model.Test.Id)
        @Html.HiddenFor(model => model.Test.TipoEjercicioId)
        @Html.HiddenFor(model => model.Test.SubTemaId)
        @Html.HiddenFor(model => model.Test.BloqueId)
        @Html.HiddenFor(model => model.Test.AreaId)
        @Html.HiddenFor(model => model.Test.UrlImagen)
        @Html.HiddenFor(model => model.ExamenId)

        if (Model.ExamenId.HasValue) {
            <div class="block-content block-content-full">
                <div class="form-group">
                    <div class="col-sm-12 text-right">
                        <button class="btn btn-default" type="button"
                                onclick="location.href='@Url.Action("Edit", "ErroresExamens", new { Area = "Admin", id = Model.ExamenId.Value })';">
                            <i class="fa fa-search"> Volver a examen</i>
                        </button>

                    </div>
                </div>
            </div>
        }
        <div class="block">
            <div class="block-content block-content-full">

                <div class="form-group">
                    <div class="col-sm-4">
                        <div class="form-material">
                            @Html.TextBoxFor(model => model.ImageFile, new { type = "file", accept = ".jpg" })
                            @Html.ValidationMessageFor(model => model.ImageFile)
                            @Html.LabelFor(model => model.ImageFile, htmlAttributes: new { @class = "" })
                        </div>
                    </div>
                    <div class="col-sm-8">
                        <div class="form-material">
                            @Html.LabelFor(model => model.Test.Enunciado, htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.Test.Enunciado, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Test.Enunciado, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                @if (!string.IsNullOrEmpty(Model.Test.UrlImagen)) {
                    <div class="form-group">
                        <div class="col-sm-12">
                            <div class="form-material">
                                <img src="~/media/upload/Test/@(Model.Test.UrlImagen)?d=@DateTime.Now.Millisecond" />
                            </div>
                        </div>
                    </div>
                }

                <div class="form-group">
                    <div class="col-sm-6">
                        <div class="form-material">
                            @Html.LabelFor(model => model.Test.Respuesta1, htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.Test.Respuesta1, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Test.Respuesta1, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-material">
                            @Html.LabelFor(model => model.Test.Respuesta2, htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.Test.Respuesta2, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Test.Respuesta2, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-6">
                        <div class="form-material">
                            @Html.LabelFor(model => model.Test.Respuesta3, htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.Test.Respuesta3, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Test.Respuesta3, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-material">
                            @Html.LabelFor(model => model.Test.Respuesta4, htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.Test.Respuesta4, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Test.Respuesta4, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-3">
                        <div class="form-material">
                            @Html.LabelFor(model => model.Test.RespuestaCorrecta, htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.Test.RespuestaCorrecta, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Test.RespuestaCorrecta, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-9">
                        <div class="form-material">
                            @Html.LabelFor(model => model.Test.Explicacion, htmlAttributes: new { @class = "" })
                            @Html.TextAreaFor(model => model.Test.Explicacion, new { @class = "form-control", @row = "3" })
                            @Html.ValidationMessageFor(model => model.Test.Explicacion, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-3">
                        <div class="form-material">
                            @Html.LabelFor(model => model.Test.PreguntaExamen, htmlAttributes: new { @class = "" })
                            @Html.CheckBox("Test.PreguntaExamen", Model.Test.PreguntaExamen ?? false)
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="block-content block-content-full">
            <div class="form-group">
                <div class="col-sm-12 text-right">
                    <input type="submit" name="command" value="Guardar" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
</div>

<!-- END Page Content -->
