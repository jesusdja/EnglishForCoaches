@model EnglishForCoachesWeb.Areas.Alumno.Models.BeatTheGoalieIndexViewModel

@{
    Layout = "~/Areas/Alumno/Views/Shared/_AlumnoLayout.cshtml";
}


<div class="container-fluid">
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index",  "Home", new { Area = "Alumno" })">Dashboard</a></li>
        <li><a href="@Url.Action("Index",  "Subtemas", new { Area = "Alumno",id=Model.juegoOnline.SubTema.TemaId })">@Model.juegoOnline.SubTema.Tema.Descripcion</a></li>
        <li><a href="@Url.Action("View",  "Subtemas", new { Area = "Alumno" ,id=Model.juegoOnline.SubTema.SubTemaId})">@Model.juegoOnline.SubTema.Descripcion</a></li>

        <li class="active">@Model.juegoOnline.Descripcion</li>
    </ol>

    <div class="card-group">
        <div class="card">
            <div class="card-block center">
                <h4 class="m-b-0">
                    <strong>@Model.BeatTheGoalies.Count</strong>
                </h4>
                <small class="text-muted-light">TOTAL</small>
            </div>
        </div>
        <div class="card">
            <div class="card-block center">
                <h4 class="text-success m-b-0">
                    <strong id="mostrarCorrectas">0</strong>
                </h4>
                <small class="text-muted-light">CORRECTAS</small>
            </div>
        </div>
        <div class="card">
            <div class="card-block center">
                <h4 class="text-danger m-b-0">
                    <strong id="mostrarIncorrectas">0</strong>
                </h4>
                <small class="text-muted-light">INCORRECTAS</small>
            </div>
        </div>
        <div class="card">
            <div class="card-block center">
                <h4 class="text-primary m-b-0">
                    <strong id="mostrarRestantes">@Model.BeatTheGoalies.Count</strong>
                </h4>
                <small class="text-muted-light">RESTANTES</small>
            </div>
        </div>
    </div>

    @if (!string.IsNullOrWhiteSpace(Model.juegoOnline.Explicacion))
    {
        <div class="card card-stats-primary">
            <div class="card-block">
                <div class="media">
                    <div class="media-left media-middle">
                        <i class="material-icons text-muted-light">info_outline</i>
                    </div>
                    <div class="media-body media-middle">
                        @Model.juegoOnline.Explicacion
                    </div>
                </div>
            </div>
        </div>
    }
    <div class="card">
        <div class="card-block">
            <div class="media" id="canvasContainer">
                <canvas id="canvasBeatTheGoalie" width="1000" height="620"></canvas>

            </div>
        </div>
    </div>

    <div class="card">
        <div class="card-header bg-white p-a-1">
            <div class="media">
                <div class="media-left media-middle">
                    <h4 class="m-b-0">
                        <strong id="mostrarNPregunta"></strong>
                    </h4>
                </div>
                <div class="media-left" id="divAudio">
                    <button onclick="Reproducir();" id="btn_audio" class="btn btn-sm btn-primary"
                            type="button">
                        <i class="material-icons">hearing</i>
                        <span class="icon-text"> Escuchar</span>
                    </button>
                    <audio id="audio_BeatTheGoalie">
                        <source id="source_BeatTheGoalie" type="audio/mpeg" />
                    </audio>

                </div>

                <div class="media-body  media-middle">
                    <h4 class="card-title" id="hEnunciado"></h4>
                </div>
            </div>
        </div>
        <div class="card-block p-a-2">
            <div class="form-group">
                <label class="c-input c-checkbox" id="chkRespuesta1">
                    <input type="checkbox">
                    <span class="c-indicator"></span><span class="label label-pill label-primary m-b-05">A</span> Respuesta 1
                </label>
            </div>
            <div class="form-group">
                <label class="c-input c-checkbox" id="chkRespuesta2">
                    <input type="checkbox">
                    <span class="c-indicator"></span><span class="label label-pill label-primary m-b-05">B</span> Respuesta 2
                </label>
            </div>
            <div class="form-group">
                <label class="c-input c-checkbox" id="chkRespuesta3">
                    <input type="checkbox">
                    <span class="c-indicator"></span><span class="label label-pill label-primary m-b-05">C</span> Respuesta 3
                </label>
            </div>
            <div class="form-group">
                <label class="c-input c-checkbox" id="chkRespuesta4">
                    <input type="checkbox">
                    <span class="c-indicator"></span><span class="label label-pill label-primary m-b-05">D</span> Respuesta 4
                </label>
            </div>
        </div>
    </div>
    <div class="card card-success center" id="divExplicacion">
        <div class="card-block">
            <div class="media">

                <div class="media-body media-middle" id="divExplicacionTexto">
                    Explicacion
                </div>


                <div class="media-right" id="divSiguiente">
                    <a href="javascript:SiguientePregunta();" class="btn btn-primary btn-sm btn-rounded pull-xs-right">Siguiente <i class="material-icons">send</i></a>
                </div>
                <div class="media-right" id="divFinalizar">
                    <a href="@Url.Action("Index",  "JuegoOnlines", new { Area = "Alumno" ,id=Model.juegoOnline.SubTemaId})"
                       class="btn btn-primary btn-sm btn-rounded pull-xs-right">Finalizar<i class="material-icons">send</i></a>
                </div>

            </div>
        </div>
    </div>
</div>


@section sidebar {

    <div class="sidebar sidebar-right si-si-3 sidebar-visible-lg-up ls-top-navbar-xs-up sidebar-light bg-white sidebar-visible" id="sidebarRight" data-position="right" data-scrollable="" data-visible="lg-up">

        <div class="sidebar-heading">Bloque</div>
        <ul class="list-group list-group-fit">
            @{ int numero = 0;}
            @foreach (var item in Model.BeatTheGoalies)
            {
                numero++;
                <li class="list-group-item" id="li_BeatTheGoalie_@item.Id">
                    <span class="media">
                        <span class="media-left">
                            <span id="span_BeatTheGoalie_@item.Id" class="btn btn-white btn-circle@(Model.mistakes.Contains(item.Id)?" btn-danger":"")">#@numero</span>
                        </span>                        
                    </span>
                </li>
            }
        </ul>
    </div>

}

@section Scripts {
    <script src="https://code.createjs.com/preloadjs-0.6.2.min.js"></script>
    <script src="https://code.createjs.com/easeljs-0.8.2.min.js"></script>
    <!-- Page JS Code -->
    <script>
        var arrayPreguntas = [];

    @foreach (var d in Model.BeatTheGoalies)
    {
        @:arrayPreguntas.push("@d.Id");
    }

        var current = 0;
        var acertadas = 0;
        var falladas = 0;
        var divExplicacion = $('#divExplicacion');
        var divExplicacionTexto = $('#divExplicacionTexto');
                
        var chkRespuesta1 = $('#chkRespuesta1');
        var chkRespuesta2 = $('#chkRespuesta2');
        var chkRespuesta3 = $('#chkRespuesta3');
        var chkRespuesta4 = $('#chkRespuesta4');
        var hEnunciado = $('#hEnunciado');


        var mostrarCorrectas = $('#mostrarCorrectas');
        var mostrarIncorrectas = $('#mostrarIncorrectas');
        var mostrarRestantes = $('#mostrarRestantes');
        var mostrarNPregunta = $('#mostrarNPregunta');

        var divSiguiente = $('#divSiguiente');
        var divFinalizar = $('#divFinalizar');

        var button = $('#btn_audio');
        var audio_BeatTheGoalie = $('#audio_BeatTheGoalie');
        var source_BeatTheGoalie = $('#source_BeatTheGoalie');
        var divAudio = $('#divAudio');

        
        function ActivarCheckEvent(numero,letraRespuesta) {
            return function () {
                Resolver(numero, letraRespuesta);
                var input = $('#chkRespuesta'+numero).find('input')[0];
                input.checked = true;

                return false;
            };
        }

        function vaciarCheck(check) {
            var input = check.find('input')[0];
            input.checked = false;
        }

        function ActivarCheck(check, numero,letraRespuesta) {
            check.off('click');
            vaciarCheck(check)
            var funcionEvento=ActivarCheckEvent(numero,letraRespuesta);
            check.on('click', funcionEvento);
            letraRespuesta.addEventListener("click", funcionEvento);
            letraRespuesta.clickEventFunction = funcionEvento;
        }

        function ActivarChecks() {
            ActivarCheck(chkRespuesta1, 1, respuestaA);
            ActivarCheck(chkRespuesta2, 2, respuestaB);
            ActivarCheck(chkRespuesta3, 3, respuestaC);
            ActivarCheck(chkRespuesta4, 4, respuestaD);
        }

        function DesactivarCheck(check, letraRespuesta) {
            check.off('click');
            if (letraRespuesta) {
                letraRespuesta.removeEventListener('click', letraRespuesta.clickEventFunction);
            }
            check.on('click', function () {
                return false;
            });
        }

        function DesactivarChecks() {
            DesactivarCheck(chkRespuesta1, respuestaA);
            DesactivarCheck(chkRespuesta2, respuestaB);
            DesactivarCheck(chkRespuesta3, respuestaC);
            DesactivarCheck(chkRespuesta4, respuestaD);
        }
        function VaciarChecks() {
            vaciarCheck(chkRespuesta1);
            vaciarCheck(chkRespuesta2 );
            vaciarCheck(chkRespuesta3 );
            vaciarCheck(chkRespuesta4);
        }

        $(document).ready(function () {
            var firstLi = $('#li_BeatTheGoalie_' + arrayPreguntas[current]);
            firstLi.addClass("active");

            CargarPregunta();
            DesactivarChecks();

            divFinalizar.hide();
            divExplicacion.hide();

            initCanvas();

        });

        function CargarPregunta() {
            mostrarNPregunta.text('#'+ (current+1));
            var url = '@Url.Action("GetBeatTheGoalie", "BeatTheGoalies", new { Area = "Alumno" })';
            url = url + '/' + arrayPreguntas[current];
            $.ajax({
                url: url,
                type: "GET",
                success: function (result) {
                    if (result.Audio) {
                        source_BeatTheGoalie.attr("src", "../../../media/upload/BeatTheGoalie/" + result.Audio);
                        divAudio.show();
                    } else {
                        divAudio.hide();
                    }
                    hEnunciado.text(result.Enunciado);
                    chkRespuesta1.contents().last().replaceWith(' ' + result.Respuesta1);
                    chkRespuesta2.contents().last().replaceWith(' ' + result.Respuesta2);
                    if (result.Respuesta3) {
                        chkRespuesta3.contents().last().replaceWith(' ' + result.Respuesta3);
                        chkRespuesta3.show();
                    } else {
                        chkRespuesta3.hide();
                    }
                    if (result.Respuesta4) {
                        
                        chkRespuesta4.contents().last().replaceWith(' ' + result.Respuesta4);
                        chkRespuesta4.show();
                    } else {
                        chkRespuesta4.hide();
                    }
                }
            });
        }

        function ObtenerDireccionRotacion(respuesta)
        {
            if (respuesta == 1) {
                return -45;
            }
            else if (respuesta == 2) {
                return 45;
            }
            else if (respuesta == 3) {
                return -85;
            }
            else if (respuesta == 4) {
                return 85;
            }
        }

        var timeoutGolParada;
        function ejecutarAnimacion(letraRespuesta, acierto, respuesta) {
            if (acierto) {
                var direccionParada = Math.floor((Math.random() * 4) + 1);
                while (direccionParada == respuesta) {
                    direccionParada = Math.floor((Math.random() * 4) + 1);
                }
                portero.targetX = arrayRespuestas[direccionParada - 1].x / scale;
                portero.targetY = arrayRespuestas[direccionParada - 1].y / scale;
                portero.targetRotation = ObtenerDireccionRotacion(direccionParada);

                timeoutGolParada=setTimeout(function () {
                    gol.alpha = 1;
                }, 1000);


            } else {
                portero.targetX = letraRespuesta.x / scale;
                portero.targetY = letraRespuesta.y / scale;
                portero.targetRotation = ObtenerDireccionRotacion(respuesta);

                timeoutGolParada=setTimeout(function () {
                    parada.alpha = 1;
                }, 1000);
            }
            balon.targetX = letraRespuesta.x / scale;
            balon.targetY = letraRespuesta.y / scale;

            portero.gotoAndStop("parada");
        }

        function Resolver(respuesta, letraRespuesta) {
            divAudio.hide();
            DesactivarChecks();
            PararParpadeoRespuestas();
            PararAudio();

                var url = '@Url.Action("Contestar", "BeatTheGoalies", new { Area = "Alumno" })';
                url = url + '/' + arrayPreguntas[current] + "?respuesta=" + respuesta;
                $.ajax({
                    url: url,
                    type: "GET",
                    success: function (result) {
                        var acierto = result.Correcto;
                        var span_BeatTheGoalie = $('#span_BeatTheGoalie_' + arrayPreguntas[current]);
                        span_BeatTheGoalie.removeClass("btn-white");
                        ejecutarAnimacion(letraRespuesta, acierto, respuesta);
                        if (acierto) {
                            acertadas++;
                            span_BeatTheGoalie.removeClass("btn-danger");
                            span_BeatTheGoalie.addClass("btn-success");
                            divExplicacion.addClass("card-success");
                        } else {
                            falladas++;
                            span_BeatTheGoalie.removeClass("btn-success");
                            span_BeatTheGoalie.addClass("btn-danger");
                            divExplicacion.addClass("card-red");
                        }

                        divExplicacionTexto.text(result.Explicacion);

                        mostrarCorrectas.text(acertadas);
                        mostrarIncorrectas.text(falladas);
                        mostrarRestantes.text(arrayPreguntas.length - (acertadas + falladas));

                        divExplicacion.show();
                        if(current==arrayPreguntas.length-1)
                        {
                            divSiguiente.hide();
                            divFinalizar.show();
                        }
                    }
                });

        }

        function SiguientePregunta() {

            var currentLi = $('#li_BeatTheGoalie_' + arrayPreguntas[current]);
            currentLi.removeClass("active");
            current++;
            var nextLi = $('#li_BeatTheGoalie_' + arrayPreguntas[current]);
            nextLi.addClass("active");

            VaciarChecks();
            CargarPregunta();
            posicionInicial();

            divExplicacion.hide();
            divExplicacion.removeClass("card-success");
            divExplicacion.removeClass("card-red");
        }
        
  
        //Audio
        function GenerarEventoEnded(button, audio) {
            return function () {
                button.removeClass("flash");
                audio.off('ended');
                portero.gotoAndStop("hablar");
            };
        }
        function Reproducir() {
            button.addClass('flash');
            audio_BeatTheGoalie.on('ended', GenerarEventoEnded(button, audio_BeatTheGoalie));

            var audio = document.getElementById('audio_BeatTheGoalie');
            audio.pause();
            audio.load();//suspends and restores all audio element

            audio.oncanplaythrough = audio.play();
            portero.gotoAndPlay("hablar");
            AnyadirRespuestas();
        }
        function PararAudio() {
            button.removeClass("flash");
            var audio = document.getElementById('audio_BeatTheGoalie');
            audio.pause();
        }

        //Canvas
        var canvasContainer = $("#canvasContainer")

        
        var baseWidth = 1000;
        var baseHeight = 620;
        var scale = 1;
        var stage, w, h, loader;
        var fondo, balon, portero,gol , parada;
        var respuestaA, respuestaB, respuestaC, respuestaD;
        var arrayRespuestas = [];
        var parpadeoRespuestas = false;

        function redimensionarCanvas() {
            //actualizamos la altura en función de la anchura
            w = canvasContainer.outerWidth() - 2; // -2 accounts for the border
            h = (w * baseHeight / baseWidth) - 2;


            stage.canvas.width = w;
            stage.canvas.height = h;
        }

        function handleResize() {
            
            redimensionarCanvas();
            //scalamos en función de la anchura
            var scalePrev=scale;
            scale = w / baseWidth;
           
           
            //fondo
            updateObjectScale(fondo, scale);
            updateObjectScale(gol, scale);
            updateObjectScale(parada, scale);

            //balon
            updateObjectScale(balon, scale - balon.scaling);
            updateObjectPosition(balon,scalePrev, scale);

            //portero
            updateObjectScale(portero, scale);
            updateObjectPosition(portero, scalePrev, scale);


            //respuestas
            if (respuestaA) {
                updateObjectScale(respuestaA, scale);
                updateObjectPosition(respuestaA, scalePrev, scale);
            }

            if (respuestaB) {
                updateObjectScale(respuestaB, scale);
                updateObjectPosition(respuestaB, scalePrev, scale);
            }
            if (respuestaC) {
                updateObjectScale(respuestaC, scale);
                updateObjectPosition(respuestaC, scalePrev, scale);
            }
            if (respuestaD) {
                updateObjectScale(respuestaD, scale);
                updateObjectPosition(respuestaD, scalePrev, scale);
            }                          

            stage.update();
        }
        
        function updateObjectScale(object,scale)
        {
            object.scaleX = object.scaleY = scale;
        }

        function updateObjectPosition(object, scalePrev, scale) {
            object.x = object.x / scalePrev * scale;
            object.y = object.y / scalePrev * scale;
        }


        function initCanvas() {
            stage = new createjs.Stage("canvasBeatTheGoalie");
            redimensionarCanvas();
            // grab canvas width and height for later calculations:
            w = baseWidth;
            h = baseHeight;

            manifest = [
                { src: "balon.png", id: "balon" },
                { src: "fondo.png", id: "fondo" },
                { src: "portero.png", id: "portero" },
                { src: "a.png", id: "respuestaA" },
                { src: "b.png", id: "respuestaB" },
                { src: "c.png", id: "respuestaC" },
                { src: "d.png", id: "respuestaD" },
                { src: "gol.png", id: "gol" },
                { src: "parada.png", id: "parada" },
            ];

            loader = new createjs.LoadQueue(false);
            loader.addEventListener("complete", handleComplete);
            loader.loadManifest(manifest, true, "../../../Content/Alumno/BeatTheGoalie/");
        }

        function posicionInicial() {
            balon.x = (baseWidth / 2 ) * scale;
            balon.y = (baseHeight) * scale;
            balon.targetX = (baseWidth / 2)
            balon.targetY = (baseHeight)
            balon.scaling = 0;
            updateObjectScale(balon, scale - balon.scaling);
            balon.regX = balon.regY = balon.tileW / 2;
            balon.rotation = 0;

            portero.regX = portero.tileW / 2;
            portero.regY = 10;
            portero.x = (baseWidth / 2 ) * scale;
            portero.y = ((baseHeight / 2) - 140) * scale;
            portero.targetX = (baseWidth / 2 );
            portero.targetY = ((baseHeight / 2)-140);
            portero.rotation = 0;
            portero.gotoAndStop("hablar");

            respuestaA.x = posRspuestaX1 * scale;
            respuestaA.y = posRspuestaY1 * scale
            respuestaB.x = posRspuestaX2 * scale;
            respuestaB.y = posRspuestaY1 * scale;
            respuestaC.x = posRspuestaX1 * scale;
            respuestaC.y = posRspuestaY2 * scale;
            respuestaD.x = posRspuestaX2 * scale;
            respuestaD.y = posRspuestaY2 * scale;
            
            respuestaA.alpha = 0;
            respuestaB.alpha = 0;
            respuestaC.alpha = 0;
            respuestaD.alpha = 0;

            if (timeoutGolParada) {
                clearTimeout(timeoutGolParada);
            }
            gol.alpha = 0;
            parada.alpha = 0;
        }

        var posRspuestaX1 = 160;
        var posRspuestaX2 = 840;

        var posRspuestaY1 = 200;
        var posRspuestaY2 = 460;

        function AnyadirRespuestas() {
            console.log("AnyadirRespuestas");
           
            respuestaA.alpha = 1;
            respuestaB.alpha = 1;
            respuestaC.alpha = 1;
            respuestaD.alpha = 1;

            parpadeoRespuestas = true;
            ActivarChecks();
        }

        function PararParpadeoRespuestas() {
            parpadeoRespuestas = false;
            respuestaA.alpha = 1;
            respuestaB.alpha = 1;
            respuestaC.alpha = 1;
            respuestaD.alpha = 1;
        }

        function handleComplete() {
            fondo = new createjs.Shape();
            fondo.graphics.beginBitmapFill(loader.getResult("fondo")).drawRect(0, 0, w, h);


            gol = new createjs.Shape();
            gol.graphics.beginBitmapFill(loader.getResult("gol")).drawRect(0, 0, w, h);
            gol.alpha = 0;

            parada = new createjs.Shape();
            parada.graphics.beginBitmapFill(loader.getResult("parada")).drawRect(0, 0, w, h);
            parada.alpha = 0;


            var spriteSheet = new createjs.SpriteSheet({
                framerate: 30,
                "images": [loader.getResult("portero")],
                "frames": { "regX": 0, "height": 450, "count": 8, "regY": 0, "width": 300 },
                // define two animations, run (loops, 1.5x speed) and jump (returns to run):
                "animations": {
                    "hablar": [0, 6, "hablar", 0.20],
                    "parada": [7, 7, "parada", 1]
                }
            });
            portero = new createjs.Sprite(spriteSheet);
            portero.tileW = 300;
            portero.tileH = 450;
            

            var balonImg = loader.getResult("balon");
            balon = new createjs.Bitmap(balonImg);
            balon.tileW = balonImg.width;
            balon.tileH = balonImg.height;

            var respuestaAImg = loader.getResult("respuestaA");
            respuestaA = new createjs.Bitmap(respuestaAImg);
            respuestaA.tileW = respuestaAImg.width;
            respuestaA.tileH = respuestaAImg.height;
            respuestaA.regX = respuestaA.regY = respuestaA.tileW / 2;
            respuestaA.cursor = "pointer";
            

            var respuestaBImg = loader.getResult("respuestaB");
            respuestaB = new createjs.Bitmap(respuestaBImg);
            respuestaB.tileW = respuestaBImg.width;
            respuestaB.tileH = respuestaBImg.height;
            respuestaB.regX = respuestaB.regY = respuestaB.tileW / 2;
            respuestaB.cursor = "pointer";


            var respuestaCImg = loader.getResult("respuestaC");
            respuestaC = new createjs.Bitmap(respuestaCImg);
            respuestaC.tileW = respuestaCImg.width;
            respuestaC.tileH = respuestaCImg.height;
            respuestaC.regX = respuestaC.regY = respuestaC.tileW / 2;
            respuestaC.cursor = "pointer";
            
            var respuestaDImg = loader.getResult("respuestaD");
            respuestaD = new createjs.Bitmap(respuestaDImg);
            respuestaD.tileW = respuestaDImg.width;
            respuestaD.tileH = respuestaDImg.height;
            respuestaD.regX = respuestaD.regY = respuestaD.tileW / 2;
            respuestaD.cursor = "pointer";

            stage.addChild(respuestaA, respuestaB, respuestaC, respuestaD);
     
            stage.enableMouseOver();

            arrayRespuestas.push(respuestaA);
            arrayRespuestas.push(respuestaB);
            arrayRespuestas.push(respuestaC);
            arrayRespuestas.push(respuestaD);



            stage.addChild(fondo, respuestaA, respuestaB, respuestaC, respuestaD, portero, balon, parada, gol);

            posicionInicial();


            createjs.Ticker.timingMode = createjs.Ticker.RAF;
            createjs.Ticker.addEventListener("tick", tick);

           

            handleResize();
            window.addEventListener("resize", handleResize);
        }

        function handleHablarStart() {
            portero.gotoAndPlay("hablar");
        }

        function tick(event) {
            var deltaS = event.delta / 1000;

            parpadearRespuestas(deltaS);

            moverBalon(deltaS);

            moverPortero(deltaS);            

            stage.update(event);
        }

        var aumentoParpadeo = -2;
        function parpadearRespuestas(deltaS) {
            if(parpadeoRespuestas)
            {
                respuestaA.alpha += aumentoParpadeo * deltaS
                respuestaB.alpha += aumentoParpadeo * deltaS;
                respuestaC.alpha += aumentoParpadeo * deltaS;
                respuestaD.alpha += aumentoParpadeo * deltaS;
                console.log();
                if(respuestaD.alpha>=1)
                {
                    aumentoParpadeo = -2;
                } 
                    if (respuestaD.alpha <= 0) {
                        aumentoParpadeo = 2;
                    }
                
            }
        }

        function moverPortero(deltaS) {
            var velocidadRotacion = 300;

            var porteroMoviendose = moverObjeto(portero, deltaS, 1000);
            if (porteroMoviendose) {
                if (Math.abs(portero.targetRotation) > Math.abs(portero.rotation)) {
                    portero.regX = portero.tileW / 2;
                    portero.regY = balon.tileH / 2;
                    if (portero.targetRotation > portero.rotation) {
                        portero.rotation += velocidadRotacion * deltaS;
                    } else {
                        portero.rotation -= velocidadRotacion * deltaS;
                    }
                    portero.regX = portero.tileW / 2;
                    portero.regY = 10;
                }
            }
        }

        function moverBalon(deltaS) {
            var velocidadScalado = 1;
            var MAX_SCALING = 0.4;
            var balonMoviendose = moverObjeto(balon, deltaS,800);

            if (balonMoviendose) {
                balon.rotation++;
                if (balon.scaling < MAX_SCALING) {
                    balon.scaling += velocidadScalado * deltaS;
                }

                updateObjectScale(balon, scale - balon.scaling)
            }
        }

        function moverObjeto(objeto, deltaS,velocidad) {
            var TargetXScale = objeto.targetX * scale;
            var TargetYScale = objeto.targetY * scale;
            var velocidadX = velocidad * scale;
            var velocidadY = velocidad * scale;

            var distanciaX = Math.abs(Math.abs(TargetXScale) - Math.abs(objeto.x));
            var distanciaY = Math.abs(Math.abs(TargetYScale) - Math.abs(objeto.y));
                      

            if (distanciaX > distanciaY) {
                velocidadY = velocidadY * (distanciaY / distanciaX);
            }
            if (distanciaX < distanciaY) {
                velocidadX = velocidadX * (distanciaX / distanciaY);
            }
            var Moviendose = false;
            if (distanciaX > velocidadX * deltaS) {
                if (objeto.x < TargetXScale) {
                    objeto.x += velocidadX * deltaS;
                }
                else {
                    objeto.x -= velocidadX * deltaS;
                }
                Moviendose = true;
            }
            if (distanciaY > velocidadY * deltaS) {
                if (objeto.y < TargetYScale) {
                    objeto.y += velocidadY * deltaS;
                }
                else {
                    objeto.y -= velocidadY * deltaS;
                }
                Moviendose = true;
            }

            return Moviendose;
        }

    </script>
}